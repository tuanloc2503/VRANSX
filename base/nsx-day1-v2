###############################################################################
#
# This configuration file is an example of creating a full-fledged 3-Tier App
# using Terraform - v0.12.7


# Tuan modified and validated works in NSXT 3.1.1 GA code build 17541984 date 01/30/2021
#
# It creates the following objects:
#   - Tier-1 Gateway (that gets attached to an existing Tier-0 Gateway)
#   - 3 Segments (Web, App, DB)
#   - Dynamic Groups based on VM Tags
#   - Static Group based on IP Addresses
#   - Distributed Firewall Rules
#   - Services
#   - VM tags
#
# The config has been validated against:
#    NSX-T 3.1.1 using NSX-T Terraform Provider 0.12.7
#
# The config below requires the following to be pre-created
#   - Edge Cluster
#   - Overlay Transport Zone
#   - Tier-0 Gateway
#
# It also uses these 3 Services available by default on NSX-T
#   - HTTPS
#   - MySQL
#   - SSH
################################################################################


Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

nsxt_policy_group.db_group: Creating...
nsxt_policy_group.app_group: Creating...
nsxt_policy_group.all_vms: Creating...
nsxt_policy_service.app_service: Creating...
nsxt_policy_dhcp_server.tier_dhcp: Creating...
nsxt_policy_group.web_group: Creating...
nsxt_policy_group.ip_set: Creating...
nsxt_policy_group.ip_set: Creation complete after 0s [id=922b0c90-c2c6-47f3-84fe-f4a77bc595da]
nsxt_policy_dhcp_server.tier_dhcp: Creation complete after 0s [id=c7bf759f-ffe4-4eea-aca9-ac0b420bb19c]
nsxt_policy_group.app_group: Creation complete after 0s [id=719518f2-deb1-4a02-b17b-569115798723]
nsxt_policy_group.all_vms: Creation complete after 0s [id=334099ed-b881-44d3-8848-0e4f4c360232]
nsxt_policy_tier1_gateway.t1_gateway: Creating...
nsxt_policy_service.app_service: Creation complete after 0s [id=6afaef34-0cfa-4a5d-9043-0f076c3bcef3]
nsxt_policy_group.db_group: Creation complete after 0s [id=dfa4bb06-2128-401f-ac5b-d123df24f41f]
nsxt_policy_group.web_group: Creation complete after 0s [id=c0d140ce-9c85-4ee4-a93b-0174383c3de1]
nsxt_policy_security_policy.firewall_section: Creating...
nsxt_policy_tier1_gateway.t1_gateway: Creation complete after 1s [id=59d3d89e-231e-40ff-bf65-c83618fa73ec]
nsxt_policy_segment.web: Creating...
nsxt_policy_segment.db: Creating...
nsxt_policy_segment.app: Creating...
nsxt_policy_security_policy.firewall_section: Creation complete after 1s [id=49453199-bb21-4515-bf88-090e44334478]
nsxt_policy_segment.app: Creation complete after 0s [id=e0d8d315-27b3-46a2-adad-da44cb87c801]
nsxt_policy_segment.web: Creation complete after 0s [id=353486b6-c35f-4c20-be10-f41b9d043d2e]
nsxt_policy_segment.db: Creation complete after 0s [id=7ff4c3a3-b18f-4a08-b9f9-ca83a446be42]

Apply complete! Resources: 12 added, 0 changed, 0 destroyed.
[root@centos7-srv terraform-provider-nsxt]# clear

[root@centos7-srv terraform-provider-nsxt]# vi nsx-day1-v4-nonat.tf 

































  }

  # Allow External IPs to communicate with VMs
  rule {
    display_name       = "Allow Infrastructure"
    description        = "Allow DNS and Management servers"
    action             = "ALLOW"
    logged             = "true"
    ip_version         = "IPV4"
    source_groups      = [nsxt_policy_group.ip_set.path]
    destination_groups = [nsxt_policy_group.all_vms.path]
  }

  # Allow VMs to communicate with outside
  rule {
    display_name  = "Allow out"
    description   = "Outgoing rule"
    action        = "ALLOW"
    logged        = "true"
    ip_version    = "IPV4"
    source_groups = [nsxt_policy_group.all_vms.path]
  }

  # Reject everything else
  rule {
    display_name = "Deny ANY"
    description  = "Default Deny the traffic"
    action       = "REJECT"
    logged       = "true"
    ip_version   = "IPV4"
  }
}

